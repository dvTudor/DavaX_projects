-- employees table
CREATE TABLE employees (
    employee_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name    VARCHAR2(25),
    last_name     VARCHAR2(25),
    email         VARCHAR2(50) UNIQUE,
    grade         VARCHAR2(25),
    line_manager  VARCHAR2(50),
    du            VARCHAR2(25),
    discipline    VARCHAR2(100)
    );

-- training sessions table
CREATE TABLE trainings (
    training_id        INT PRIMARY KEY,
    training_name      VARCHAR2(100),
    discipline         VARCHAR2(100),
    session_date       DATE,
    session_start_time INTERVAL DAY TO SECOND,
    session_end_time   INTERVAL DAY TO SECOND
    );

-- training attendance table (no. of employees multiplied by the number of trainings)
CREATE TABLE training_attendance (
    attendance_id INT PRIMARY KEY,
    employee_id   INT,
    training_id   INT,
    validated     CHAR(1) CHECK (validated IN ('Y', 'N', '-'))
    );

-- absences table
CREATE TABLE absences (
    absence_id   INT PRIMARY KEY,
    employee_id  INT,
    information  VARCHAR2(100),
    session_date       DATE,
    session_start_time INTERVAL DAY TO SECOND,
    session_end_time   INTERVAL DAY TO SECOND,
    all_day_event      CHAR(1)
    );

/*  
select * from employees;
select * from trainings;
select * from training_attendance;
select * from employees where employee_id = 8;
select * from trainings where training_id = 5;
select count(*) from training_attendance;
select * from absences;
select * from employees where employee_id=58;
*/

-- check training attendance on a specific date
SELECT 
    e.employee_id,
    e.first_name,
    e.last_name,
    t.training_name,
    t.session_date,
    t.session_start_time,
    t.session_end_time,
    ta.validated
FROM 
    training_attendance ta
JOIN 
    employees e ON ta.employee_id = e.employee_id
JOIN 
    trainings t ON ta.training_id = t.training_id
WHERE 
    t.session_date = TO_DATE('2025-06-24', 'YYYY-MM-DD');
-- most will be validated, some that have not registered an absence will be invalidated
-- and those who were not present and had not registered an absence will have pending validation

-- check training attendance for a specific employee on a specific date
SELECT 
    e.employee_id,
    e.first_name,
    e.last_name,
    t.training_name,
    t.session_date,
    t.session_start_time,
    t.session_end_time,
    ta.validated
FROM 
    training_attendance ta
JOIN 
    employees e ON ta.employee_id = e.employee_id
JOIN 
    trainings t ON ta.training_id = t.training_id
WHERE 
    e.employee_id = 332 AND t.session_date = TO_DATE('2025-06-24', 'YYYY-MM-DD');
    
-- weekly report for a specific employee
SELECT 
    e.employee_id,
    e.first_name,
    e.last_name,
    t.training_name,
    t.discipline,
    t.session_date,
    t.session_start_time,
    t.session_end_time,
    ta.validated
FROM 
    training_attendance ta
JOIN 
    employees e ON ta.employee_id = e.employee_id
JOIN 
    trainings t ON ta.training_id = t.training_id
WHERE 
    e.employee_id = 332
    AND t.session_date BETWEEN TO_DATE('2025-06-23', 'YYYY-MM-DD') 
                          AND TO_DATE('2025-06-29', 'YYYY-MM-DD')
ORDER BY 
    t.session_date;

-- monthly report for a specific employee
SELECT 
    e.employee_id,
    e.first_name,
    e.last_name,
    t.training_name,
    t.discipline,
    t.session_date,
    t.session_start_time,
    t.session_end_time,
    ta.validated
FROM 
    training_attendance ta
JOIN 
    employees e ON ta.employee_id = e.employee_id
JOIN 
    trainings t ON ta.training_id = t.training_id
WHERE 
    e.employee_id = 332
    AND t.session_date BETWEEN TO_DATE('2025-06-01', 'YYYY-MM-DD') 
                          AND TO_DATE('2025-06-30', 'YYYY-MM-DD')
ORDER BY 
    t.session_date;

/*
drop table employees;
drop table trainings;
drop table training_attendance;
drop table absences;
*/